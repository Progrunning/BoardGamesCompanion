name: $(functions.version) $(Build.BuildID) $(SourceBranchName)

variables:
  - name: appDirectoryName
    value: backend/BGC.Functions
  - group: BGC-GLOBAL

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - BGC.Functions
      - BGC.Core

pool:
  vmImage: ubuntu-latest

steps:
  - task: UseDotNet@2
    displayName: Use .NET 7.0
    inputs:
      packageType: "sdk"
      version: "7.0.x"

  - script: |
      dotnet restore
      dotnet build -c Release
    displayName: Restore & Build
    workingDirectory: "$(Build.SourcesDirectory)/$(appDirectoryName)"

  - template: ${{ variables['System.DefaultWorkingDirectory'] }}/pipelines/templates/test_and_coverage.yaml
    parameters:
      pathToProjects: "**/BGC.@(Core|Functions).UnitTests.csproj"
      # Excluding all the models as they shouldn't have any or much logic
      excludeFilterExpression: "[*]BGC.Core.Models.*"

  - task: DotNetCoreCLI@2
    displayName: Publish
    inputs:
      command: "publish"
      projects: "$(Build.SourcesDirectory)/$(appDirectoryName)/*.csproj"
      arguments: "-c Release -o $(Build.ArtifactStagingDirectory)/out"
      publishWebProjects: false
      modifyOutputPath: false
      zipAfterPublish: false

  - task: ArchiveFiles@2
    displayName: "Zip"
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/out"
      includeRootFolder: false
      archiveFile: "$(Build.ArtifactStagingDirectory)/out/$(functions.version).$(Build.BuildID).zip"

  - task: PublishPipelineArtifact@1
    displayName: "Publish Functions Artifact"
    inputs:
      targetPath: "$(Build.ArtifactStagingDirectory)/out/$(functions.version).$(Build.BuildID).zip"
      artifactName: "functions"
      publishLocation: "pipeline"
