# TODO Base pipeline name on the zipped artifact file name (i.e. version)
name: $(app.version).$(Build.BuildID) $(SourceBranchName)

variables:
  pipelineSourceProjectId: 'cf1ca5c2-9446-441f-b3af-6e9f951997cf'
  pipelineSourceProjectDefinitionId: '22'
  
  azureRegionLocation: eastus
  
  devEnvironmentAffix: dev
  devAzureSubscription: bgc-dev(0b0b0e44-f48a-4f5b-9ee0-6bf6c571e58a)
  devBicepTemplateParametersFileName: paramteres.dev.json
  prodEnvironmentAffix: prod
  prodAzureSubscription: bgc-prod(637f5988-c385-408a-9b44-61b1c72f6b36)
  prodBicepTemplateParametersFileName: paramteres.prod.json
  
  resourceGroupName: bgc-rg
  functionsAppName: bgc-func

  bicepTemplateFileName: template.bicep

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - BGC.Functions     

stages:
  - stage: DEV
    jobs:
      - job: PublishFunctions
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - checkout: none

          - task: DownloadPipelineArtifact@2
            displayName: 'Download Artifacts'
            inputs:
              buildType: 'specific'
              project: $(pipelineSourceProjectId)
              definition: $(pipelineSourceProjectDefinitionId)
              buildVersionToDownload: 'latest'
              targetPath: '$(Pipeline.Workspace)'
          
          - task: AzureCLI@2
            displayName: 'Deploy Bicep template to Azure'
            inputs:
              azureSubscription: $(devAzureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az --version
                az group create --name $(resourceGroupName) --location $(azureRegionLocation)
                az deployment group create --resource-group $(resourceGroupName) --template-file '$(Pipeline.Workspace)/bicep/$(bicepTemplateFileName)' --parameters '$(Pipeline.Workspace)/bicep/$(devBicepTemplateParametersFileName)'

          - task: AzureFunctionApp@1
            displayName: 'Deploy Functions'
            inputs:
              azureSubscription: $(devAzureSubscription)
              appType: 'functionAppLinux'
              appName: '$(functionsAppName)-$(devEnvironmentAffix)'
              package: '$(Pipeline.Workspace)/*.zip'

  - stage: PROD
    dependsOn:
      - DEV
    # Preventing PROD stage from running automatically - only manual deployments allowed
    condition: eq('true', 'false') 
    jobs:
      - job: PublishFunctions
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Artifacts'
            inputs:
              buildType: 'specific'
              project: $(pipelineSourceProjectId)
              definition: $(pipelineSourceProjectDefinitionId)
              buildVersionToDownload: 'latest'
              itemPattern: '**/*.zip'
              targetPath: '$(Pipeline.Workspace)'
          
          - task: AzureFunctionApp@1
            displayName: 'Deploy Functions'
            inputs:
              azureSubscription: $(prodAzureSubscription)
              appType: 'functionAppLinux'
              appName: '$(functionsAppName)-$(prodEnvironmentAffix)'
              package: '$(Pipeline.Workspace)/*.zip'