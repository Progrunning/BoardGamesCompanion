name: $(app.version).$(Build.BuildID) $(SourceBranchName)

trigger: none

pr:
  branches:
    include:
      - main
  paths:
    include:
      - board_games_companion

variables:
  - name: appDirectoryName
    value: board_games_companion
  - group: BGC-GLOBAL

parameters:
  - name: runTests
    displayName: Run tests
    type: boolean
    default: true
  - name: buildIOS
    displayName: Build iOS
    type: boolean
    default: true
  - name: buildAndroid
    displayName: Build Android
    type: boolean
    default: true
  - name: javaVersion
    displayName: Java version
    type: number
    default: 17

jobs:
  - job: Test
    timeoutInMinutes: 10
    condition: eq('${{ parameters.runTests }}', 'true')
    pool:
      vmImage: "macOS-latest"

    steps:
      - task: FlutterInstall@0
        displayName: "Install Flutter"
        inputs:
          mode: "auto"
          channel: "stable"
          version: "custom"
          customVersion: $(flutter.version)

      - task: FlutterTest@0
        displayName: "Run tests"
        inputs:
          projectDirectory: "$(Build.SourcesDirectory)/$(appDirectoryName)"
          generateCodeCoverageReport: true

      - task: reportgenerator@5
        displayName: "Generate coverage report"
        inputs:
          reports: "$(Build.SourcesDirectory)/$(appDirectoryName)/coverage/lcov.info"
          targetdir: "$(Build.SourcesDirectory)/$(appDirectoryName)/coverage/"
          sourcedirs: "$(Build.SourcesDirectory)/$(appDirectoryName)"
          # reporttypes: "HtmlInline_AzurePipelines;Cobertura"
          reporttypes: "Cobertura;Badges"
          # Exclude all generated files from the code coverage
          filefilters: "-lib/**/*.g.dart"
          tag: "$(app.version).$(Build.BuildID)"

      # - task: PublishCodeCoverageResults@1
      #   displayName: Publish code coverage
      #   inputs:
      #     codeCoverageTool: Cobertura
      #     summaryFileLocation: "$(Build.SourcesDirectory)/$(appDirectoryName)/coverage/Cobertura.xml"
      #     reportDirectory: "${{ parameters.testsAndCoverageOutputDirectory }}/reports"
      #     failIfCoverageEmpty: true

      - task: PublishCodeCoverageResults@2
        displayName: "Publish code coverage results"
        inputs:
          summaryFileLocation: "$(Build.SourcesDirectory)/$(appDirectoryName)/coverage/Cobertura.xml"
          pathToSources: "$(Build.SourcesDirectory)/$(appDirectoryName)"

  - job: BuildDroid
    dependsOn: Test
    condition: eq('${{ parameters.buildAndroid }}', 'true')
    timeoutInMinutes: 10
    pool:
      vmImage: "macOS-latest"

    steps:
      - task: JavaToolInstaller@0
        displayName: "Install Java ${{ parameters.javaVersion }}"
        inputs:
          versionSpec: ${{ parameters.javaVersion }}
          jdkArchitectureOption: x64
          jdkSourceOption: PreInstalled

      - task: FlutterInstall@0
        displayName: "Install Flutter"
        inputs:
          mode: "auto"
          channel: "stable"
          version: "custom"
          customVersion: $(flutter.version)

      - task: FlutterBuild@0
        displayName: "Build Android"
        inputs:
          target: "aab"
          debugMode: true
          projectDirectory: "$(Build.SourcesDirectory)/$(appDirectoryName)"
          buildNumber: "$(Build.BuildID)"
          buildName: "$(app.version).$(Build.BuildID)"

  - job: BuildIOS
    dependsOn: Test
    condition: eq('${{ parameters.buildIOS }}', 'true')
    timeoutInMinutes: 10
    pool:
      vmImage: "macOS-latest"

    steps:
      - task: FlutterInstall@0
        displayName: "Install Flutter"
        inputs:
          mode: "auto"
          channel: "stable"
          version: "custom"
          customVersion: $(flutter.version)

      - task: FlutterBuild@0
        displayName: "Build iOS"
        inputs:
          target: "ios"
          debugMode: true
          iosCodesign: false
          projectDirectory: "$(Build.SourcesDirectory)/$(appDirectoryName)"
          buildNumber: "$(Build.BuildID)"
          buildName: "$(app.version).$(Build.BuildID)"
