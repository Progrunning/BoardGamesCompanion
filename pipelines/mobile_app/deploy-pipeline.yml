name: $(app.version).$(Build.BuildID) $(SourceBranchName)

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - board_games_companion

parameters:
  - name: appVersion
    displayName: App version
    type: string
    default: ""
  - name: publishAndroid
    displayName: Publish to Google Play
    type: boolean
    default: true
  - name: publishIOS
    displayName: Publish to Apple Store
    type: boolean
    default: true

variables:
  - name: appVersion
    value: $[coalesce('${{ parameters.appVersion }}', variables['app.version'])]
  - name: appPackageName
    value: com.progrunning.boardgamescompanion
  - name: appDirectoryName
    value: board_games_companion
  - name: keyPropertiesFileName
    value: key.properties
  - name: keyStoreFileName
    value: boardgamescompanion.keystore
  - group: BGC-GLOBAL

stages:
  - stage: CdBuildAndroid
    jobs:
      - job: BuildAndroid
        condition: or(eq('${{ parameters.publishAndroid }}', 'true'), in(variables['Build.Reason'], 'BatchedCI', 'IndividualCI'))
        timeoutInMinutes: 20
        pool:
          vmImage: "ubuntu-22.04"

        steps:
          - task: JavaToolInstaller@0
            displayName: "Install Java 11"
            inputs:
              versionSpec: "11"
              jdkArchitectureOption: x64
              jdkSourceOption: PreInstalled

          - task: FlutterInstall@0
            displayName: "Install Flutter v$(flutter.version)"
            inputs:
              mode: "auto"
              channel: "stable"
              version: "custom"
              customVersion: $(flutter.version)

          - task: DownloadSecureFile@1
            displayName: "Downloading key.properties file"
            inputs:
              secureFile: "$(keyPropertiesFileName)"

          - task: CopyFiles@2
            displayName: "Copying key.properties file into the android directory"
            inputs:
              SourceFolder: "$(Agent.TempDirectory)"
              Contents: "$(keyPropertiesFileName)"
              TargetFolder: "$(Build.SourcesDirectory)/$(appDirectoryName)/android/"

          - task: DownloadSecureFile@1
            displayName: "Downloading keystore file"
            inputs:
              secureFile: "$(keyStoreFileName)"

          - task: CopyFiles@2
            displayName: "Copying keystore file into the app directory"
            inputs:
              SourceFolder: "$(Agent.TempDirectory)"
              Contents: "$(keyStoreFileName)"
              TargetFolder: "$(Build.SourcesDirectory)/$(appDirectoryName)/android/app"

          - task: FlutterBuild@0
            displayName: Build Android
            inputs:
              target: "aab"
              projectDirectory: "$(Build.SourcesDirectory)/$(appDirectoryName)"
              buildNumber: "$(Build.BuildID)"
              buildName: "$(appVersion)"
              dartDefineMulti: searchBoardGamesApiBaseUrl=$(searchApiBaseUrl) searchBoardGamesApiSubscriptionKey=$(searchApiSubscriptionKey)

          - task: DeleteFiles@1
            displayName: Deleting key.properties file
            condition: always()
            inputs:
              SourceFolder: "$(Build.SourcesDirectory)/android/"
              Contents: "$(keyPropertiesFileName)"

          - task: DeleteFiles@1
            displayName: Deleting keystore file
            condition: always()
            inputs:
              SourceFolder: "$(Build.SourcesDirectory)/$(appDirectoryName)/android/app"
              Contents: "$(keyStoreFileName)"

          - task: PublishPipelineArtifact@1
            condition: always()
            displayName: Publishing aab artifacts
            inputs:
              targetPath: "$(Build.SourcesDirectory)/$(appDirectoryName)/build/app/outputs/bundle/release/app-release.aab"
              artifact: "drop-droid"
              publishLocation: pipeline

  - stage: CdPublishAndroid
    dependsOn: CdBuildAndroid
    jobs:
      - job: PublishAndroid
        condition: eq(stageDependencies.CdBuildAndroid.BuildAndroid.result, 'Succeeded')
        timeoutInMinutes: 5
        pool:
          vmImage: "ubuntu-22.04"

        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download pipeline artifacts"
            inputs:
              buildType: "current"
              artifactName: "drop-droid"
              itemPattern: "*.aab"
              targetPath: "$(Pipeline.Workspace)"

          - task: DownloadSecureFile@1
            displayName: "Download Google Play Console JSON key auth file"
            name: serviceAccAuthJson
            inputs:
              secureFile: "Google_Play_Store_Dev_Ops_Service_Acc_Auth.json"

          - task: Bash@3
            displayName: "Fastlane - publish aab to Beta"
            inputs:
              workingDirectory: "$(Pipeline.Workspace)"
              targetType: "inline"
              script: |

                fastlane supply --aab app-release.aab --json_key $(serviceAccAuthJson.secureFilePath) --track beta --rollout 1.0 --package_name $(appPackageName) --skip_upload_apk true

  - stage: CdBuildiOS
    dependsOn: []
    jobs:
      - job: BuildiOS
        condition: or(eq('${{ parameters.publishIOS }}', 'true'), in(variables['Build.Reason'], 'BatchedCI', 'IndividualCI'))
        timeoutInMinutes: 30
        pool:
          vmImage: "macOS-12"

        steps:
          - task: FlutterInstall@0
            displayName: "Install Flutter"
            inputs:
              mode: "auto"
              channel: "stable"
              version: "custom"
              customVersion: $(flutter.version)
              dartDefineMulti: searchBoardGamesApiBaseUrl=$(searchApiBaseUrl) searchBoardGamesApiSubscriptionKey=$(searchApiSubscriptionKey)

          - task: InstallAppleCertificate@2
            inputs:
              certSecureFile: "Progrunning_Distribution_Cert.p12"
              certPwd: "$(iOSProgrunningDistributionCert)"
              keychain: "temp"
              deleteCert: true

          - task: InstallAppleProvisioningProfile@1
            inputs:
              provisioningProfileLocation: "secureFiles"
              provProfileSecureFile: "Board_Games_Companion_Distribution.mobileprovision"
              removeProfile: true

          - task: FlutterBuild@0
            displayName: "Build iOS"
            inputs:
              target: "ios"
              iosCodesign: false
              projectDirectory: "$(Build.SourcesDirectory)/$(appDirectoryName)"
              buildNumber: "$(Build.BuildID)"
              buildName: "$(appVersion)"

          - task: Xcode@5
            inputs:
              actions: "build"
              configuration: "Release"
              sdk: "iphoneos"
              xcWorkspacePath: "**/ios/Runner.xcworkspace"
              scheme: "Runner"
              packageApp: true
              exportMethod: app-store
              signingOption: "manual"
              signingIdentity: "$(APPLE_CERTIFICATE_SIGNING_IDENTITY)"
              provisioningProfileUuid: "$(APPLE_PROV_PROFILE_UUID)"
              exportPath: "$(Agent.BuildDirectory)/output/iphoneos/Release"

          - task: CopyFiles@2
            inputs:
              SourceFolder: "$(Agent.BuildDirectory)/output/iphoneos/Release"
              Contents: "**/*.ipa"
              TargetFolder: "$(Build.ArtifactStagingDirectory)/output/"

          - task: PublishPipelineArtifact@1
            condition: always()
            displayName: "Publishing ipa artifacts"
            inputs:
              targetPath: "$(Build.ArtifactStagingDirectory)/output/BGC.ipa"
              artifact: "drop-ios"
              publishLocation: pipeline

  - stage: CdPublishiOS
    dependsOn: CdBuildiOS
    jobs:
      - job: PublishiOS
        condition: eq(stageDependencies.CdBuildiOS.BuildiOS.result, 'Succeeded')
        timeoutInMinutes: 20
        pool:
          vmImage: "macOS-12"

        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download ipa"
            inputs:
              buildType: "current"
              artifactName: "drop-ios"
              itemPattern: "*.ipa"
              targetPath: "$(Pipeline.Workspace)"

          - task: DownloadSecureFile@1
            displayName: "Downloading App Store Connect Api Key"
            inputs:
              secureFile: "App_Store_Connect_Api_Key.p8"

          - task: AppStoreRelease@1
            displayName: "Publish to TestFlight"
            inputs:
              authType: "ApiKey"
              apiKeyId: "$(AppStoreConnectApiKeyId)"
              apiKeyIssuerId: "69a6de91-779b-47e3-e053-5b8c7c11a4d1"
              apitoken: "$(AppStoreConnectApiKeyContentBase64)"
              appIdentifier: "$(appPackageName)"
              appType: "iOS"
              releaseTrack: "TestFlight"
              ipaPath: "$(Pipeline.Workspace)/*.ipa"
              shouldSkipWaitingForProcessing: true
              shouldSkipSubmission: true
              fastlaneArguments: "--verbose"
